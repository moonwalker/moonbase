definitions:
  api.blobEntry:
    properties:
      contents:
        items:
          type: integer
        type: array
    type: object
  api.branchItem:
    properties:
      name:
        type: string
      sha:
        type: string
    type: object
  api.branchList:
    properties:
      items:
        items:
          $ref: '#/definitions/api.branchItem'
        type: array
    type: object
  api.collectionPayload:
    properties:
      name:
        type: string
    type: object
  api.commitPayload:
    properties:
      commitMessage:
        type: string
      contents:
        items:
          type: integer
        type: array
    type: object
  api.deletePayload:
    properties:
      name:
        type: string
    type: object
  api.entryPayload:
    properties:
      contents:
        type: string
      name:
        type: string
    type: object
  api.errorData:
    properties:
      code:
        type: string
      id:
        type: string
      message:
        type: string
      status:
        type: string
    type: object
  api.repositoryItem:
    properties:
      defaultBranch:
        type: string
      name:
        type: string
      owner:
        type: string
    type: object
  api.repositoryList:
    properties:
      items:
        items:
          $ref: '#/definitions/api.repositoryItem'
        type: array
      lastPage:
        type: integer
    type: object
  api.treeItem:
    properties:
      name:
        type: string
      path:
        type: string
      sha:
        type: string
      type:
        type: string
    type: object
info:
  contact: {}
  description: '### Git-based headless CMS API'
  license:
    name: MIT
    url: https://github.com/moonwalker/moonbase/blob/main/LICENSE
  title: Moonbase
  version: "1.0"
paths:
  /cms/{owner}/{repo}/{ref}/{collection}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: the account owner of the repository (the name is not case sensitive)
        in: path
        name: owner
        required: true
        type: string
      - description: the name of the repository (the name is not case sensitive)
        in: path
        name: repo
        required: true
        type: string
      - description: git ref (branch, tag, sha)
        in: path
        name: ref
        required: true
        type: string
      - description: collection
        in: path
        name: collection
        required: true
        type: string
      - description: delete payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/api.deletePayload'
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.errorData'
      security:
      - bearerToken: []
      summary: Delete document
      tags:
      - cms
  /cms/{owner}/{repo}/{ref}/{collection}/{entry}:
    get:
      consumes:
      - application/json
      parameters:
      - description: the account owner of the repository (the name is not case sensitive)
        in: path
        name: owner
        required: true
        type: string
      - description: the name of the repository (the name is not case sensitive)
        in: path
        name: repo
        required: true
        type: string
      - description: git ref (branch, tag, sha)
        in: path
        name: ref
        required: true
        type: string
      - description: collection
        in: path
        name: collection
        required: true
        type: string
      - description: entry
        in: path
        name: entry
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.entryPayload'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.errorData'
      security:
      - bearerToken: []
      summary: Get entry
      tags:
      - cms
  /cms/{owner}/{repo}/{ref}/collections:
    get:
      consumes:
      - application/json
      parameters:
      - description: the account owner of the repository (the name is not case sensitive)
        in: path
        name: owner
        required: true
        type: string
      - description: the name of the repository (the name is not case sensitive)
        in: path
        name: repo
        required: true
        type: string
      - description: git ref (branch, tag, sha)
        in: path
        name: ref
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.treeItem'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.errorData'
      security:
      - bearerToken: []
      summary: Get collections
      tags:
      - cms
    post:
      consumes:
      - application/json
      parameters:
      - description: the account owner of the repository (the name is not case sensitive)
        in: path
        name: owner
        required: true
        type: string
      - description: the name of the repository (the name is not case sensitive)
        in: path
        name: repo
        required: true
        type: string
      - description: git ref (branch, tag, sha)
        in: path
        name: ref
        required: true
        type: string
      - description: collection payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/api.collectionPayload'
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.errorData'
      security:
      - bearerToken: []
      summary: Create or Update collection
      tags:
      - cms
  /cms/{owner}/{repo}/{ref}/collections/{collection}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: the account owner of the repository (the name is not case sensitive)
        in: path
        name: owner
        required: true
        type: string
      - description: the name of the repository (the name is not case sensitive)
        in: path
        name: repo
        required: true
        type: string
      - description: git ref (branch, tag, sha)
        in: path
        name: ref
        required: true
        type: string
      - description: collection
        in: path
        name: collection
        required: true
        type: string
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.errorData'
      security:
      - bearerToken: []
      summary: Delete collection
      tags:
      - cms
    get:
      consumes:
      - application/json
      parameters:
      - description: the account owner of the repository (the name is not case sensitive)
        in: path
        name: owner
        required: true
        type: string
      - description: the name of the repository (the name is not case sensitive)
        in: path
        name: repo
        required: true
        type: string
      - description: git ref (branch, tag, sha)
        in: path
        name: ref
        required: true
        type: string
      - description: collection
        in: path
        name: collection
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.treeItem'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.errorData'
      security:
      - bearerToken: []
      summary: Get entries
      tags:
      - cms
    post:
      consumes:
      - application/json
      parameters:
      - description: the account owner of the repository (the name is not case sensitive)
        in: path
        name: owner
        required: true
        type: string
      - description: the name of the repository (the name is not case sensitive)
        in: path
        name: repo
        required: true
        type: string
      - description: git ref (branch, tag, sha)
        in: path
        name: ref
        required: true
        type: string
      - description: collection
        in: path
        name: collection
        required: true
        type: string
      - description: entry payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/api.entryPayload'
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.errorData'
      security:
      - bearerToken: []
      summary: Create or Update entry
      tags:
      - cms
  /repos:
    get:
      consumes:
      - application/json
      parameters:
      - description: 'page of results to retrieve (default: `1`)'
        in: query
        name: page
        type: string
      - description: 'number of results to include per page (default: `30`)'
        in: query
        name: per_page
        type: string
      - description: 'how to sort the repository list, can be one of `created`, `updated`,
          `pushed`, `full_name` (default: `full_name`)'
        in: query
        name: sort
        type: string
      - description: 'direction in which to sort repositories, can be one of `asc`
          or `desc` (default when using `full_name`: `asc`; otherwise: `desc`)'
        in: query
        name: direction
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.repositoryList'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.errorData'
      security:
      - bearerToken: []
      summary: Get repositories
      tags:
      - repos
  /repos/{owner}/{repo}/blob/{ref}/{path}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: the account owner of the repository (the name is not case sensitive)
        in: path
        name: owner
        required: true
        type: string
      - description: the name of the repository (the name is not case sensitive)
        in: path
        name: repo
        required: true
        type: string
      - description: git ref (branch, tag, sha)
        in: path
        name: ref
        required: true
        type: string
      - description: contents path
        in: path
        name: path
        required: true
        type: string
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.errorData'
      security:
      - bearerToken: []
      summary: Delete blob
      tags:
      - repos
    get:
      consumes:
      - application/json
      parameters:
      - description: the account owner of the repository (the name is not case sensitive)
        in: path
        name: owner
        required: true
        type: string
      - description: the name of the repository (the name is not case sensitive)
        in: path
        name: repo
        required: true
        type: string
      - description: git ref (branch, tag, sha)
        in: path
        name: ref
        required: true
        type: string
      - description: contents path
        in: path
        name: path
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.blobEntry'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.errorData'
      security:
      - bearerToken: []
      summary: Get blob
      tags:
      - repos
    post:
      consumes:
      - application/json
      parameters:
      - description: the account owner of the repository (the name is not case sensitive)
        in: path
        name: owner
        required: true
        type: string
      - description: the name of the repository (the name is not case sensitive)
        in: path
        name: repo
        required: true
        type: string
      - description: git ref (branch, tag, sha)
        in: path
        name: ref
        required: true
        type: string
      - description: contents path
        in: path
        name: path
        required: true
        type: string
      - description: commit payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/api.commitPayload'
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.errorData'
      security:
      - bearerToken: []
      summary: Post blob
      tags:
      - repos
  /repos/{owner}/{repo}/branches:
    get:
      consumes:
      - application/json
      parameters:
      - description: the account owner of the repository (the name is not case sensitive)
        in: path
        name: owner
        required: true
        type: string
      - description: the name of the repository (the name is not case sensitive)
        in: path
        name: repo
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.branchList'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.errorData'
      security:
      - bearerToken: []
      summary: Get branhces
      tags:
      - repos
  /repos/{owner}/{repo}/tree/{ref}/{path}:
    get:
      consumes:
      - application/json
      parameters:
      - description: the account owner of the repository (the name is not case sensitive)
        in: path
        name: owner
        required: true
        type: string
      - description: the name of the repository (the name is not case sensitive)
        in: path
        name: repo
        required: true
        type: string
      - description: git ref (branch, tag, sha)
        in: path
        name: ref
        required: true
        type: string
      - description: tree path
        in: path
        name: path
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: integer
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.errorData'
      security:
      - bearerToken: []
      summary: Get tree
      tags:
      - repos
securityDefinitions:
  bearerToken:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
